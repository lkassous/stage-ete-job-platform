#!/bin/bash

# Script d'arrÃªt pour la stack complÃ¨te CV Filtering System

echo "ğŸ›‘ ArrÃªt du CV Filtering System - Full Stack"
echo "============================================="

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages colorÃ©s
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# VÃ©rifier si Docker Compose est disponible
if ! command -v docker-compose &> /dev/null; then
    print_error "Docker Compose n'est pas installÃ©."
    exit 1
fi

# ArrÃªter tous les services
print_status "ArrÃªt de tous les services..."
docker-compose -f docker-compose.full-stack.yml down

# Optionnel: Supprimer les volumes (dÃ©commentez si vous voulez supprimer les donnÃ©es)
# print_warning "Suppression des volumes (donnÃ©es de la base de donnÃ©es)..."
# docker-compose -f docker-compose.full-stack.yml down -v

# Optionnel: Supprimer les images (dÃ©commentez si vous voulez supprimer les images)
# print_warning "Suppression des images Docker..."
# docker-compose -f docker-compose.full-stack.yml down --rmi all

# Afficher les conteneurs restants
print_status "Conteneurs Docker restants:"
docker ps -a --filter "name=cv-"

# Nettoyer les ressources inutilisÃ©es
print_status "Nettoyage des ressources Docker inutilisÃ©es..."
docker system prune -f

print_success "âœ… Tous les services ont Ã©tÃ© arrÃªtÃ©s avec succÃ¨s!"
print_status "ğŸ’¡ Pour redÃ©marrer, utilisez: ./start-full-stack.sh"
