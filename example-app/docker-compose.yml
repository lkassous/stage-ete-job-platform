services:
  # Service Nginx (Reverse Proxy)
  nginx:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    container_name: laravel_nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - .:/var/www/html:ro
    depends_on:
      - app
    networks:
      - laravel_network

  # Service de l'application Laravel (Apache)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_app
    restart: unless-stopped
    expose:
      - "80"
    volumes:
      - .:/var/www/html
      - ./storage:/var/www/html/storage
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=laravel_db
      - DB_USERNAME=laravel_user
      - DB_PASSWORD=laravel_password
    depends_on:
      - postgres
    networks:
      - laravel_network

  # Service PostgreSQL
  postgres:
    image: postgres:17-alpine
    container_name: laravel_postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: laravel_db
      POSTGRES_USER: laravel_user
      POSTGRES_PASSWORD: laravel_password
      POSTGRES_ROOT_PASSWORD: root_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - laravel_network

  # Service Redis (optionnel, pour le cache et les sessions)
  redis:
    image: redis:7-alpine
    container_name: laravel_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - laravel_network

  # Service Adminer (interface d'administration de base de données)
  adminer:
    image: adminer:4.8.1
    container_name: laravel_adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - laravel_network

  # Service MailHog (serveur SMTP de test)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: laravel_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # Port SMTP
      - "8025:8025"  # Interface web
    networks:
      - laravel_network




  # Service Frontend Angular
  frontend:
    build:
      context: ../example-app-frontend
      dockerfile: Dockerfile
    container_name: angular_frontend
    restart: unless-stopped
    ports:
      - "9000:80"
    depends_on:
      - app
    networks:
      - laravel_network

# Volumes persistants
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

# Réseau
networks:
  laravel_network:
    driver: bridge
